{"version":3,"sources":["main.js"],"names":["lastLocation","$color","document","querySelector","$dots","$rubber","$colorList","$canvas","ctx","getContext","mouseState","touchDevice","widthChoice","rubberChoice","colorChoice","colorStore","widthStore","width","documentElement","clientWidth","height","clientHeight","ontouchstart","e","touches","clientX","clientY","ontouchmove","clearRect","beginPath","moveTo","lineTo","lineWidth","strokeStyle","lineCap","stroke","onmousedown","onmouseup","onmousemove","addEventListener","target","currentTarget","i","children","length","parent","classList","remove","add","onclick","style","background"],"mappings":"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","file":"main.b5da777a.js","sourceRoot":"..\\src","sourcesContent":["import \"reset.css\"\r\nimport \"./style.css\"\r\nimport './display.css'\r\nimport './color.css'\r\n\r\n\r\nconst $color = document.querySelector('.color')\r\nconst $dots = document.querySelector('.dots')\r\nconst $rubber = document.querySelector('.rubber')\r\nconst $colorList = document.querySelector('.color-list')\r\nconst $canvas = document.querySelector('.canvas')\r\nconst ctx = $canvas.getContext('2d');\r\n\r\n\r\nlet mouseState = false\r\nlet lastLocation\r\nlet touchDevice = \"ontouchend\" in document ? true : false;\r\n\r\nlet widthChoice = 1\r\nlet rubberChoice = false\r\nlet colorChoice = 0\r\nlet colorStore = ['black', 'red', '#ff5000', '#1AAD19', 'blue', '#8000ff', '#483D8D']\r\nlet widthStore = ['20', '15', '10']\r\n\r\n\r\n$canvas.width = document.documentElement.clientWidth\r\n$canvas.height = document.documentElement.clientHeight - 135\r\n\r\n\r\n\r\nif (touchDevice) {\r\n    $canvas.ontouchstart = (e) => {\r\n        lastLocation = [e.touches[0].clientX, e.touches[0].clientY]\r\n    }\r\n    $canvas.ontouchmove = (e) => {\r\n        if (rubberChoice) {\r\n            ctx.clearRect(e.touches[0].clientX, e.touches[0].clientY, 30, 30)\r\n        } else {\r\n            ctx.beginPath()\r\n            ctx.moveTo(lastLocation[0], lastLocation[1])\r\n            ctx.lineTo(e.touches[0].clientX, e.touches[0].clientY)\r\n            ctx.lineWidth = widthStore[widthChoice]\r\n            ctx.strokeStyle = colorStore[colorChoice]\r\n            ctx.lineCap = 'round'\r\n            ctx.stroke()\r\n            lastLocation = [e.touches[0].clientX, e.touches[0].clientY]\r\n        }\r\n    }\r\n} else {\r\n    $canvas.onmousedown = (e) => {\r\n        mouseState = true\r\n        lastLocation = [e.clientX, e.clientY]\r\n    }\r\n\r\n    $canvas.onmouseup = () => {\r\n        mouseState = false\r\n    }\r\n\r\n    $canvas.onmousemove = (e) => {\r\n\r\n        if (mouseState) {\r\n            if (rubberChoice) {\r\n                ctx.clearRect(e.clientX - 15, e.clientY - 15, 30, 30)\r\n            } else {\r\n                ctx.beginPath()\r\n                ctx.moveTo(lastLocation[0], lastLocation[1])\r\n                ctx.lineTo(e.clientX, e.clientY)\r\n                ctx.lineWidth = widthStore[widthChoice]\r\n                ctx.strokeStyle = colorStore[colorChoice]\r\n                ctx.lineCap = 'round'\r\n                ctx.stroke()\r\n                lastLocation = [e.clientX, e.clientY]\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n$dots.addEventListener('click', (e) => {\r\n    if (e.target !== e.currentTarget) {\r\n        for (let i = 0; i < e.currentTarget.children.length; i++) {\r\n            let parent = e.currentTarget.children\r\n            if (parent[i] != e.target) {\r\n                parent[i].classList.remove('selected')\r\n            } else {\r\n                parent[i].classList.add('selected')\r\n                widthChoice = i\r\n            }\r\n        }\r\n\r\n    }\r\n})\r\n\r\n$color.onclick = (e) => {\r\n    e.currentTarget.classList.add('selected')\r\n    rubberChoice = false\r\n    $rubber.classList.remove('selected')\r\n}\r\n\r\n\r\n$rubber.addEventListener('click', (e) => {\r\n    e.currentTarget.classList.add('selected')\r\n    rubberChoice = true\r\n    $color.classList.remove('selected')\r\n})\r\n\r\n$colorList.addEventListener('click', (e) => {\r\n    if (e.target != e.currentTarget) {\r\n        $rubber.classList.remove('selected')\r\n        for (let i = 0; i < e.currentTarget.children.length; i++) {\r\n            let parent = e.currentTarget.children\r\n            if (parent[i] === e.target) {\r\n                e.target.classList.add('selected')\r\n                colorChoice = i\r\n                rubberChoice = false\r\n                $color.style.background = colorStore[colorChoice]\r\n            } else {\r\n                parent[i].classList.remove('selected')\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n"]}